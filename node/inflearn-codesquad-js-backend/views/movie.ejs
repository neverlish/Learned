<!doctype html>
<html>
<head>
  <meta charset='utf-8'>
  <meta name='description' content=''>
  <meta name='viewport' content='width=device-width, initial-scale=1'>
  <title>movie list</title>
  <link rel="stylesheet" href="/css/ui.css">
</head>
<body>
  <h1>movie list</h1>

  <section class="showWrap">
    <ul>
      <li class="get_all">
        <button>모든영화보기</button>
        <section class="showResult"></section>
      </li>

      <li class="post">
        <form action="" method='post'>
          <div> 제목 : <input type="text" name='title' placeholder='Terminator'> </div>
          <div> 장르 : <input type="text" name='type' placeholder='drama'> </div>
          <div> 평점 : <input type="text" name='grade' placeholder='8.43'> </div>
          <div> 주연 : <input type="text" name='actor' placeholder='Tom cruise'> </div>
        </form>
        <button>영화추가</button>
        <section class="showResult"></section>
      </li>

      <li class="get_id">
        <input type="text" name='title'>
        <button>영화상세정보</button>
        <section class="showResult"></section>
      </li>

      <li class="delete_id">
        <input type="text" name='title'>
        <button>영화삭제</button>
        <section class="showResult"></section>
      </li>

      <li class="update_id">
        <form action="" method='post'>
          <div> 제목 : <input type="text" name='title' placeholder='Terminator'> </div>
          <div> 장르 : <input type="text" name='type' placeholder='drama'> </div>
          <div> 평점 : <input type="text" name='grade' placeholder='8.43'> </div>
          <div> 주연 : <input type="text" name='actor' placeholder='Tom cruise'> </div>
        </form>
        <button>영화정보갱신</button>
        <section class="showResult"></section>
      </li>

      <li class="get_min">
        <button>현재 상영중인영화</button>
        <section class="showResult"></section>
      </li>
    </ul>
  </section>

  <script>
    document.querySelector('.showWrap').addEventListener('click', function(e) {
      let url, method, data, fn;
      const target = e.target;
      const li = target.closest('LI');
      const showResult = li.querySelector('.showResult');
      const type = li.className;

      if (target.tagName !== 'BUTTON') return;

      switch (type) {
        case 'get_all':
          url = '/movie';
          method = 'GET';
          fn = function(result) {
            if(result.result === 1) {
              let titles = result.data.reduce(function(pre, next) {
                pre += '<li>' + next.title + '</li>'
                return pre;
              }, '');
              showResult.innerHTML = '<ul>' + titles + '</ul>';
            } else {
              showResult.innerHTML = 'list not foound';
            }
          }
          break;
        case 'post':
          url = '/movie'
          method = 'POST';
          let inputs = [].slice.call(document.querySelector('form').elements);
          data = inputs.reduce(function(pre, next) {
            pre[next.name] = next.value;
            return pre;
          }, {});
          fn = function(result) {
            if (result.result === 1) showResult.innerHTML = '새로운 영화 데이터가 잘 추가됐습니다.';
            else showResult.innerHTML = 'list not found';
          }
          break;
        case 'get_id':
          url = '/movie/' + li.getElementsByTagName('input')[0].value;
          method = 'GET';
          fn = function(result) {
            if (result.result === 1) {
              showResult.innerHTML = result.data[0].actor;
            } else {
              showResult.innerHTML = '해당하는 영화가 없습니다.';
            }
          }
          break;
        case 'delete_id':
          url = '/movie/' + li.getElementsByTagName('input')[0].value;
          method = 'DELETE';
          fn = function(result) {
            if (result.result === 1) {
              showResult.innerHTML = '선택한 영화 ' + result.data + '가 잘 삭제됐습니다.';
            } else {
              showResult.innerText = '해당영화가 없습니다.'
            }
          }
          break;
        default:
          // statements_def
          console.log('default');
          break;
      }
      sendAjax(url, method, data, fn);
    })

    //@data: json format.
    function sendAjax(url, method, data, fn) {
      const xhr = new XMLHttpRequest();
      xhr.open(method, url);

      if (data) {
        data = JSON.stringify(data);
        xhr.setRequestHeader('Content-Type', 'application/json');
      } else {
        data = null;
      }
      xhr.send(data);

      xhr.addEventListener('load', function() {
        const result = JSON.parse(xhr.responseText);
        fn(result);
      });
    }
  </script>
</body>
</html>
